"use strict";(self.webpackChunkwiki_site=self.webpackChunkwiki_site||[]).push([[3473],{50158:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>d});var l=t(46393);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);n&&(l=l.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,l)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,l,a=function(e,n){if(null==e)return{};var t,l,a={},r=Object.keys(e);for(l=0;l<r.length;l++)t=r[l],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)t=r[l],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=l.createContext({}),o=function(e){var n=l.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},m=function(e){var n=o(e.components);return l.createElement(p.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return l.createElement(l.Fragment,{},n)}},k=l.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,p=e.parentName,m=u(e,["components","mdxType","originalType","parentName"]),k=o(t),d=a,c=k["".concat(p,".").concat(d)]||k[d]||s[d]||r;return t?l.createElement(c,i(i({ref:n},m),{},{components:t})):l.createElement(c,i({ref:n},m))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,i=new Array(r);i[0]=k;var u={};for(var p in n)hasOwnProperty.call(n,p)&&(u[p]=n[p]);u.originalType=e,u.mdxType="string"==typeof e?e:a,i[1]=u;for(var o=2;o<r;o++)i[o]=t[o];return l.createElement.apply(null,i)}return l.createElement.apply(null,t)}k.displayName="MDXCreateElement"},24906:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>s,frontMatter:()=>r,metadata:()=>u,toc:()=>o});var l=t(39421),a=(t(46393),t(50158));const r={},i="Hello Rust [1] - \u57fa\u7840\u8bed\u6cd5",u={unversionedId:"\u5176\u4ed6/Rust/\u57fa\u7840\u8bed\u6cd5",id:"\u5176\u4ed6/Rust/\u57fa\u7840\u8bed\u6cd5",title:"Hello Rust [1] - \u57fa\u7840\u8bed\u6cd5",description:"\u53d8\u91cf",source:"@site/docs/09-\u5176\u4ed6/Rust/01-\u57fa\u7840\u8bed\u6cd5.md",sourceDirName:"09-\u5176\u4ed6/Rust",slug:"/\u5176\u4ed6/Rust/\u57fa\u7840\u8bed\u6cd5",permalink:"/docs/\u5176\u4ed6/Rust/\u57fa\u7840\u8bed\u6cd5",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Git-\u6280\u5de7",permalink:"/docs/\u5176\u4ed6/Git/Git-\u6280\u5de7"},next:{title:"Hello Rust [2] - \u6240\u6709\u6743",permalink:"/docs/\u5176\u4ed6/Rust/\u6240\u6709\u6743"}},p={},o=[{value:"\u53d8\u91cf",id:"\u53d8\u91cf",level:2},{value:"\u9690\u85cf\uff08shadowing\uff09",id:"\u9690\u85cfshadowing",level:3},{value:"\u6570\u636e\u7c7b\u578b",id:"\u6570\u636e\u7c7b\u578b",level:2},{value:"\u6807\u91cf\u7c7b\u578b",id:"\u6807\u91cf\u7c7b\u578b",level:3},{value:"\u6574\u578b",id:"\u6574\u578b",level:4},{value:"\u6d6e\u70b9\u578b",id:"\u6d6e\u70b9\u578b",level:4},{value:"\u5e03\u5c14\u578b",id:"\u5e03\u5c14\u578b",level:4},{value:"\u5b57\u7b26\u7c7b\u578b",id:"\u5b57\u7b26\u7c7b\u578b",level:4},{value:"\u590d\u5408\u7c7b\u578b",id:"\u590d\u5408\u7c7b\u578b",level:3},{value:"\u5143\u7ec4",id:"\u5143\u7ec4",level:4},{value:"\u6570\u7ec4",id:"\u6570\u7ec4",level:4},{value:"\u51fd\u6570",id:"\u51fd\u6570",level:2},{value:"\u8bed\u53e5\u548c\u8868\u8fbe\u5f0f",id:"\u8bed\u53e5\u548c\u8868\u8fbe\u5f0f",level:3},{value:"loop\uff1a\u5faa\u73af",id:"loop\u5faa\u73af",level:3},{value:"while: \u6761\u4ef6\u5faa\u73af",id:"while-\u6761\u4ef6\u5faa\u73af",level:3},{value:"for: \u904d\u5386\u5faa\u73af",id:"for-\u904d\u5386\u5faa\u73af",level:3}],m={toc:o};function s(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,l.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"hello-rust-1---\u57fa\u7840\u8bed\u6cd5"},"Hello Rust ","[1]"," - \u57fa\u7840\u8bed\u6cd5"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'// \u5f15\u5165\u7b2c\u4e09\u65b9\u5305\nuse rand::Rng; // \u968f\u673a\u6d4b\u8bd5\u5305\nuse std::cmp::Ordering; // \u6bd4\u8f83\u503c\nuse std::io; // \u6807\u51c6\u8f93\u5165\u8f93\u51fa\n\nfn main() {\n    println!("Guess the number!"); // \u6807\u51c6\u8f93\u51fa\xc1\xc1\xc1\xc1\n    \n    // \u4e0d\u53ef\u53d8\u53d8\u91cf\uff0c\u751f\u6210\u4e00\u4e2a1~100\u4e4b\u95f4\u7684\u968f\u673a\u6570\n    let secret_number = rand::thread_rng().gen_range(1..=100);\n\n    // \u5faa\u73af\n    loop {\n        println!("Please input your guess.");\n        // \u58f0\u660e\u4e00\u4e2a\u53ef\u53d8\u91cf\uff0c\u7528mut\u5173\u952e\u5b57\n        let mut guess = String::new();\n        // \u83b7\u53d6\u6807\u51c6\u8f93\u5165\n        io::stdin()\n            .read_line(&mut guess)\n            // \u5f02\u5e38\u5904\u7406\n            .expect("Failed to read line");\n        // \u5c06\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6570\u5b57\u5e76trim\n        // \u8fd9\u91cc\u7684guess\u9690\u85cf\uff08shadowing\uff09\u4e86\u4e4b\u524d\u7684guess\n        // trim\u4f1a\u6d88\u9664\u7a7a\u767d\u7b26\u548c\u6362\u884c\u7b26\n        let guess: u32 = match guess.trim().parse() {\n            Ok(num) => num,\n            // \u5904\u7406\u65e0\u6548\u8f93\u5165\n            Err(_) => continue,\n        };\n\n        // \u6a21\u677f\u5360\u4f4d\u7b26\n        println!("You guessed: {guess}");\n\n        // \u8fdb\u884c\u6bd4\u8f83\n        match guess.cmp(&secret_number) {\n            // \u6bd4\u8f83\u7ed3\u679c\u592a\u5c0f\n            Ordering::Less => println!("Too small!"),\n            // \u6bd4\u8f83\u7ed3\u679c\u592a\u5927\n            Ordering::Greater => println!("Too big!"),\n            // \u521a\u597d\u76f8\u7b49\uff0c\u9000\u51fa\u5faa\u73af\n            Ordering::Equal => {\n                println!("You win!");\n                break;\n            }\n        }\n    }\n}\n')),(0,a.kt)("h2",{id:"\u53d8\u91cf"},"\u53d8\u91cf"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"let x = 5; // \u4e0d\u53ef\u53d8\u91cf\uff0c\u7c7b\u4f3cjs\u7684const\nlet mut y = 6; // \u53d8\u91cf\nconst z = 7; // \u5e38\u91cf\uff0c\u7c7b\u4f3cc\u7684\u5b8f\u5b9a\u4e49\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u53d8\u91cf\u9ed8\u8ba4\u662f\u4e0d\u53ef\u53d8\u7684\u3002\u5982\u679c\u8981\u53ef\u53d8\u5219\u6dfb\u52a0\u5173\u952e\u8bcd",(0,a.kt)("inlineCode",{parentName:"li"},"mut")),(0,a.kt)("li",{parentName:"ul"},"\u5e38\u91cf\u7528",(0,a.kt)("inlineCode",{parentName:"li"},"const"),"\u58f0\u660e\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u5e38\u91cf\u4e0e\u4e0d\u53ef\u53d8\u91cf\u7684\u533a\u522b\uff1a",(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},"\u5e38\u91cf\u4e0d\u53ef\u7528",(0,a.kt)("inlineCode",{parentName:"li"},"mut")),(0,a.kt)("li",{parentName:"ol"},"\u5e38\u91cf\u53ef\u4ee5\u5728\u4efb\u4f55\u4f5c\u7528\u57df\u58f0\u660e\uff0c\u5305\u62ec\u5168\u5c40\u4f5c\u7528\u57df\u3002"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"\u5e38\u91cf\u53ea\u80fd\u88ab\u8bbe\u7f6e\u4e3a\u5e38\u91cf\u8868\u8fbe\u5f0f\uff0c\u800c\u4e0d\u53ef\u4ee5\u662f\u5176\u4ed6\u4efb\u4f55\u53ea\u80fd\u5728\u8fd0\u7b97\u65f6\u8ba1\u7b97\u5f97\u5230\u7684\u503c\u3002"))))),(0,a.kt)("h3",{id:"\u9690\u85cfshadowing"},"\u9690\u85cf\uff08shadowing\uff09"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"let x = 5;\n\nlet x = x + 1; // \u91cd\u65b0\u58f0\u660e\u4e86x\uff0c\u5bf9\u524d\u4e00\u4e2a\u7533\u660e\u7684\u53d8\u91cf\u8fdb\u884c\u4e86\u9690\u85cf\n")),(0,a.kt)("p",null,"\u4e0e\u4f7f\u7528",(0,a.kt)("inlineCode",{parentName:"p"},"mut"),"\u7684\u533a\u522b\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5728shadowing\u573a\u666f\u4e0b\uff0c\u91cd\u65b0\u58f0\u660e\u7684\u53d8\u91cf\u4ecd\u7136\u662f\u4e0d\u53ef\u53d8\u7684"),(0,a.kt)("li",{parentName:"ul"},"shadowing\u5b9e\u9645\u4e0a\u662f\u91cd\u65b0\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u53d8\u91cf\uff0c",(0,a.kt)("strong",{parentName:"li"},"\u6b64\u65f6\u662f\u5141\u8bb8\u4fee\u6539\u53d8\u91cf\u7684\u7c7b\u578b\u7684"))),(0,a.kt)("h2",{id:"\u6570\u636e\u7c7b\u578b"},"\u6570\u636e\u7c7b\u578b"),(0,a.kt)("p",null,"RUST \u662f\u9759\u6001\u7c7b\u578b\u8bed\u8a00\uff0c\u4e3b\u8981\u5206\u6210\u6807\u91cf\uff08scalar\uff09\u7c7b\u578b\u548c\u590d\u5408\uff08copound\uff09\u7c7b\u578b"),(0,a.kt)("h3",{id:"\u6807\u91cf\u7c7b\u578b"},"\u6807\u91cf\u7c7b\u578b"),(0,a.kt)("p",null,"\u56db\u79cd\u57fa\u672c\u6807\u91cf\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u6574\u578b"),(0,a.kt)("li",{parentName:"ul"},"\u6d6e\u70b9\u578b"),(0,a.kt)("li",{parentName:"ul"},"\u5e03\u5c14\u7c7b\u578b"),(0,a.kt)("li",{parentName:"ul"},"\u5b57\u7b26\u7c7b\u578b")),(0,a.kt)("h4",{id:"\u6574\u578b"},"\u6574\u578b"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"\u957f\u5ea6"),(0,a.kt)("th",{parentName:"tr",align:null},"\u6709\u7b26\u53f7"),(0,a.kt)("th",{parentName:"tr",align:null},"\u65e0\u7b26\u53f7"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"8-bit"),(0,a.kt)("td",{parentName:"tr",align:null},"i8"),(0,a.kt)("td",{parentName:"tr",align:null},"u8")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"16-bit"),(0,a.kt)("td",{parentName:"tr",align:null},"i16"),(0,a.kt)("td",{parentName:"tr",align:null},"u16")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"32-bit"),(0,a.kt)("td",{parentName:"tr",align:null},"i32"),(0,a.kt)("td",{parentName:"tr",align:null},"u32")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"64-bit"),(0,a.kt)("td",{parentName:"tr",align:null},"i64"),(0,a.kt)("td",{parentName:"tr",align:null},"u64")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"128-bit"),(0,a.kt)("td",{parentName:"tr",align:null},"i128"),(0,a.kt)("td",{parentName:"tr",align:null},"u128")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"arch"),(0,a.kt)("td",{parentName:"tr",align:null},"isize"),(0,a.kt)("td",{parentName:"tr",align:null},"usize")))),(0,a.kt)("p",null,"\u5b57\u9762\u503c\uff0c\u7528\u6765\u533a\u5206\u8fdb\u5236\uff1a"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"\u6570\u5b57\u5b57\u9762\u503c"),(0,a.kt)("th",{parentName:"tr",align:null},"\u4f8b\u5b50"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Decimal (\u5341\u8fdb\u5236)"),(0,a.kt)("td",{parentName:"tr",align:null},"98_222")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Hex (\u5341\u516d\u8fdb\u5236)"),(0,a.kt)("td",{parentName:"tr",align:null},"0xff")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Octal (\u516b\u8fdb\u5236)"),(0,a.kt)("td",{parentName:"tr",align:null},"0o77")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Binary (\u4e8c\u8fdb\u5236)"),(0,a.kt)("td",{parentName:"tr",align:null},"0b1111_0000")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Byte (\u5355\u5b57\u8282\u5b57\u7b26)(\u4ec5\u9650\u4e8eu8)"),(0,a.kt)("td",{parentName:"tr",align:null},"b'A'")))),(0,a.kt)("h4",{id:"\u6d6e\u70b9\u578b"},"\u6d6e\u70b9\u578b"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"let x = 2.0; // f64\nlet y: f32 = 3.0; // f32\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"f32: 32\u4f4d\u6d6e\u70b9\u6570"),(0,a.kt)("li",{parentName:"ul"},"f64: 64\u4f4d\u6d6e\u70b9\u6570")),(0,a.kt)("h4",{id:"\u5e03\u5c14\u578b"},"\u5e03\u5c14\u578b"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"let t = true;\nlet f: bool = false;\n")),(0,a.kt)("h4",{id:"\u5b57\u7b26\u7c7b\u578b"},"\u5b57\u7b26\u7c7b\u578b"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"let c = 'z'; // \u5355\u5f15\u53f7\uff0c\u58f0\u660e\xb7char\xb7\u5b57\u9762\u91cf\n")),(0,a.kt)("h3",{id:"\u590d\u5408\u7c7b\u578b"},"\u590d\u5408\u7c7b\u578b"),(0,a.kt)("p",null,"\u539f\u751f\u6709\u4e24\u4e2a\u590d\u5408\u7c7b\u578b\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5143\u7ec4\uff08tuple\uff09\uff1a\u5c06\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u5176\u4ed6\u7c7b\u578b\u7684\u503c\u7ec4\u5408\u5230\u4e00\u4e2a\u590d\u5408\u7c7b\u578b\u7684\u4e3b\u8981\u65b9\u5f0f\uff0c\u4e00\u65e6\u58f0\u660e\uff0c\u957f\u5ea6\u4e0d\u53d8\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u6570\u7ec4\uff08array\uff09\uff1a\u6bcf\u4e2a\u5143\u7d20\u7c7b\u578b\u5fc5\u987b\u76f8\u540c\uff0c",(0,a.kt)("strong",{parentName:"li"},"\u957f\u5ea6\u4e5f\u662f\u56fa\u5b9a\u7684"),"\u3002")),(0,a.kt)("h4",{id:"\u5143\u7ec4"},"\u5143\u7ec4"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"fn main() {\n    // \u5143\u7d20\u7c7b\u578b\u7684\u5b9a\u4e49\n    let tup: (i32, f64, u8) = (500, 6.4, 1);\n    // \u89e3\u6784\u8bed\u6cd5\n    let (x, y, z) = tup;\n    // \u76f4\u63a5\u8bbf\u95ee\n    let fiv_hundred = x.0;\xcf\n    let six_point_four = x.1;\n    let one = x.2;\n}\n")),(0,a.kt)("p",null,"\u6ca1\u6709\u4efb\u4f55\u503c\u7684\u5143\u7ec4\uff0c\u53eb\u505a",(0,a.kt)("strong",{parentName:"p"},"\u5355\u5143(unit)\u5143\u7ec4"),"\uff0c\u8fd9\u79cd\u7eb8\u4ee5\u53ca\u5bf9\u5e94\u7684\u7c7b\u578b\u90fd\u5199\u6210",(0,a.kt)("inlineCode",{parentName:"p"},"()"),"\uff0c\u8868\u793a\u7a7a\u4e4b\u6216\u8005\u7a7a\u7684\u8fd4\u56de\u7c7b\u578b\u3002"),(0,a.kt)("h4",{id:"\u6570\u7ec4"},"\u6570\u7ec4"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"fn main() {\n    // \u6307\u5b9a\u7c7b\u578b\n    let a:[i32:5] = [1,2,3,4,5];\n    // \u5feb\u901f\u6307\u5b9a\n    let a = [3;5]; // [3,3,3,3,3]\n    // \u8bbf\u95ee\u5143\u7d20\n    let first = a[0];\n    let second = a[1];\n}\n")),(0,a.kt)("p",null,"\u6570\u7ec4\u4f1a\u5728\u6808\uff08stack\uff09\u4e0a\u5206\u914d\u7a7a\u95f4\u800c\u4e0d\u662f\u5806\uff08heap\uff09\uff0c\u6570\u7ec4\u4e0d\u5982vector\u7075\u6d3b\uff0cvector\u53ef\u4ee5\u52a8\u6001\u589e\u957f\u6216\u8005\u7f29\u5c0f\u957f\u5ea6\u3002",(0,a.kt)("br",null),"\u8bbf\u95ee\u65f6\u8d85\u51fa\u957f\u5ea6\u4f1a\u62a5\u4e00\u4e2a\u7f16\u8bd1\u9519\u8bef\u3002"),(0,a.kt)("h2",{id:"\u51fd\u6570"},"\u51fd\u6570"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"fn main() {\n    print_labeled_measurement(5, 'h');\n}\n\nfn print_labeled_measurement(value: i32, unit_label: char) {\n    println!(\"The measurement is: {value}{unit_label}\");\n}\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u51fd\u6570\u53c2\u6570\u5fc5\u987b\u58f0\u660e\u7c7b\u578b")),(0,a.kt)("h3",{id:"\u8bed\u53e5\u548c\u8868\u8fbe\u5f0f"},"\u8bed\u53e5\u548c\u8868\u8fbe\u5f0f"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u8bed\u53e5\uff1a\u6267\u884c\u64cd\u4f5c\u4f46\u4e0d\u8fd4\u56de\u503c\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u8868\u8fbe\u5f0f\uff1a\u8ba1\u7b97\u5e76\u4ea7\u751f\u4e00\u4e2a\u503c\u3002")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"let y=6; // \u8fd9\u662f\u4e00\u4e2a\u8bed\u53e5\uff0c\u4e0d\u8fd4\u56de\u503c\n// let x = (let y = 6); \u6240\u4ee5\u4f1a\u62a5\u9519\n\nlet y = {\n    let x = 3;\n    // \u8fd9\u91cc\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u6ce8\u610f\uff0c\u8868\u8fbe\u5f0f\u7684\u7ed3\u5c3e\u6ca1\u6709 \u2018\u5206\u53f7\u2019\uff0c\u5982\u679c\u52a0\u4e0a\u4e86\u5206\u53f7\uff0c\u5c31\u53d8\u6210\u4e86\u8bed\u53e5\n    x + 1\n}\uff1b // \u8fd9\u91ccy\u7684\u503c\u4e3a4;\n\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"\u8868\u8fbe\u5f0f\u7684\u7ed3\u5c3e\u6ca1\u6709 \u2018\u5206\u53f7\u2019\uff0c\u5982\u679c\u52a0\u4e0a\u4e86\u5206\u53f7\uff0c\u5c31\u53d8\u6210\u4e86\u8bed\u53e5\u3002"))),(0,a.kt)("br",null),"### \u6709\u8fd4\u56de\u503c\u7684\u51fd\u6570 ```rust fn five() -> i32 ",5,(0,a.kt)("p",null,"fn main() {\nlet x = five();"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'println!("The value of x is: {x}");\n')),(0,a.kt)("p",null,"}"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'\n## \u63a7\u5236\u6d41\n### if\uff1a\u6761\u4ef6\n```rust\nfn main() {\n    let number = 6;\n\n    if number % 4 == 0 {\n        println!("number is divisible by 4");\n    } else if number % 3 == 0 {\n        println!("number is divisible by 3");\n    } else if number % 2 == 0 {\n        println!("number is divisible by 2");\n    } else {\n        println!("number is not divisible by 4, 3, or 2");\n    }\n}\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5728let\u8bed\u53e5\u4e2d\u4f7f\u7528",(0,a.kt)("inlineCode",{parentName:"li"},"if"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n    let condition = true;\n    // \u6ce8\u610f\u5206\u652f\u4e2d\u7684\u5185\u5bb9\u9700\u8981\u8fd4\u56de\u76f8\u540c\u7c7b\u578b\u7684\u503c\uff0c\u4e0d\u7136\u5c31\u4f1a\u62a5\u9519\n    let number = if condition { 5 } else { 6 };\n\n    println!("The value of number is: {number}");\n}\n\n')),(0,a.kt)("h3",{id:"loop\u5faa\u73af"},"loop\uff1a\u5faa\u73af"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n    let mut count = 0;\n    // \u4f7f\u7528 \'xxx \u4f5c\u4e3a\u5faa\u73af\u6807\u7b7e\n    \'counting_up: loop {\n        // \u53cd\u590d\u6267\u884cloop\u8bed\u53e5\u4e2d\u7684\u903b\u8f91\n        println!("count = {count}");\n        let mut remaining = 10;\n\n        loop {\n            println!("remaining = {remaining}");\n            if remaining == 9 {\n                // \u8df3\u51fa\u5f53\u524dloop\n                break;\n            }\n            if count == 2 {\n                // \u8df3\u51fa\u6307\u5b9a\u7684loop\n                break \'counting_up;\n            }\n            remaining -= 1;\n        }\n\n        count += 1;\n    }\n    println!("End count = {count}");\n}\n')),(0,a.kt)("h3",{id:"while-\u6761\u4ef6\u5faa\u73af"},"while: \u6761\u4ef6\u5faa\u73af"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n    let mut number = 3;\n\n    while number != 0 {\n        println!("{number}!");\n\n        number -= 1;\n    }\n\n    println!("LIFTOFF!!!");\n}\n')),(0,a.kt)("h3",{id:"for-\u904d\u5386\u5faa\u73af"},"for: \u904d\u5386\u5faa\u73af"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n    let a = [10, 20, 30, 40, 50];\n\n    for element in a {\n        println!("the value is: {element}");\n    }\n}\n')))}s.isMDXComponent=!0}}]);