"use strict";(self.webpackChunk_jeiiz_wiki_site=self.webpackChunk_jeiiz_wiki_site||[]).push([[1651],{158:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>d});var l=t(6393);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);n&&(l=l.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,l)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,l,a=function(e,n){if(null==e)return{};var t,l,a={},r=Object.keys(e);for(l=0;l<r.length;l++)t=r[l],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)t=r[l],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=l.createContext({}),p=function(e){var n=l.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},m=function(e){var n=p(e.components);return l.createElement(u.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return l.createElement(l.Fragment,{},n)}},c=l.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,u=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),c=p(t),d=a,k=c["".concat(u,".").concat(d)]||c[d]||s[d]||r;return t?l.createElement(k,i(i({ref:n},m),{},{components:t})):l.createElement(k,i({ref:n},m))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,i=new Array(r);i[0]=c;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var p=2;p<r;p++)i[p]=t[p];return l.createElement.apply(null,i)}return l.createElement.apply(null,t)}c.displayName="MDXCreateElement"},7012:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>i,default:()=>s,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var l=t(9421),a=(t(6393),t(158));const r={},i="Hello Rust [3] - \u7ed3\u6784\u4e0e\u679a\u4e3e",o={unversionedId:"\u5176\u4ed6/Rust/03\u7ed3\u6784\u4e0e\u679a\u4e3e",id:"\u5176\u4ed6/Rust/03\u7ed3\u6784\u4e0e\u679a\u4e3e",title:"Hello Rust [3] - \u7ed3\u6784\u4e0e\u679a\u4e3e",description:"\u548c\u5143\u7ec4\u7c7b\u4f3c\uff0c\u7ed3\u6784\u4f53\u4e5f\u662f\u7531\u4e0d\u540c\u7c7b\u578b\u7684\u503c\u7ec4\u6210\uff0c\u4e0d\u540c\u5728\u4e8e\u9700\u8981\u547d\u540d\u5404\u4e2a\u90e8\u5206\u7684\u503c\u3002\uff08\u7c7b\u6bd4\u5bf9\u8c61\uff09",source:"@site/docs/\u5176\u4ed6/Rust/03\u7ed3\u6784\u4e0e\u679a\u4e3e.md",sourceDirName:"\u5176\u4ed6/Rust",slug:"/\u5176\u4ed6/Rust/03\u7ed3\u6784\u4e0e\u679a\u4e3e",permalink:"/static-site/docs/\u5176\u4ed6/Rust/03\u7ed3\u6784\u4e0e\u679a\u4e3e",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Hello Rust [2] - \u6240\u6709\u6743",permalink:"/static-site/docs/\u5176\u4ed6/Rust/02\u6240\u6709\u6743"},next:{title:"Hello Rust [4] - \u6a21\u5757",permalink:"/static-site/docs/\u5176\u4ed6/Rust/04\u6a21\u5757"}},u={},p=[{value:"\u5176\u4ed6\u7ed3\u6784\u4f53",id:"\u5176\u4ed6\u7ed3\u6784\u4f53",level:2},{value:"\u5143\u7ec4\u7ed3\u6784\u4f53",id:"\u5143\u7ec4\u7ed3\u6784\u4f53",level:3},{value:"\u7c7b\u5355\u5143\u7ed3\u6784\u4f53",id:"\u7c7b\u5355\u5143\u7ed3\u6784\u4f53",level:3},{value:"\u7ed3\u6784\u4f53\u548c\u6240\u6709\u6743",id:"\u7ed3\u6784\u4f53\u548c\u6240\u6709\u6743",level:2},{value:"\u65b9\u6cd5\u7ed3\u6784\u4f53",id:"\u65b9\u6cd5\u7ed3\u6784\u4f53",level:2},{value:"\u5173\u8054\u51fd\u6570",id:"\u5173\u8054\u51fd\u6570",level:3},{value:"Option",id:"option",level:2},{value:"\u679a\u4e3e\u548cmatch",id:"\u679a\u4e3e\u548cmatch",level:2},{value:"match \u548c option",id:"match-\u548c-option",level:3},{value:"\u901a\u914d\u7b26\u548c <code>_</code>\u5360\u4f4d\u7b26",id:"\u901a\u914d\u7b26\u548c-_\u5360\u4f4d\u7b26",level:3},{value:"if let \u7b80\u6d01\u63a7\u5236\u6d41",id:"if-let-\u7b80\u6d01\u63a7\u5236\u6d41",level:3}],m={toc:p};function s(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,l.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"hello-rust-3---\u7ed3\u6784\u4e0e\u679a\u4e3e"},"Hello Rust ","[3]"," - \u7ed3\u6784\u4e0e\u679a\u4e3e"),(0,a.kt)("p",null,"\u548c\u5143\u7ec4\u7c7b\u4f3c\uff0c\u7ed3\u6784\u4f53\u4e5f\u662f\u7531\u4e0d\u540c\u7c7b\u578b\u7684\u503c\u7ec4\u6210\uff0c\u4e0d\u540c\u5728\u4e8e\u9700\u8981\u547d\u540d\u5404\u4e2a\u90e8\u5206\u7684\u503c\u3002\uff08\u7c7b\u6bd4\u5bf9\u8c61\uff09"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'// \u5143\u7ec4\nlet tup: (i32, f64, u8) = (500, 6.4, 1);\n\n// \u5b9a\u4e49\u7ed3\u6784\u4f53\nstruct User {\n    active: bool,\n    username: String,\n    email: String,\n    sign_in_count: u64,\n}\n\n\nfn main() {\n    // \u4f7f\u7528\u7ed3\u6784\u4f53\n    let user1 = User {\n        email: String::from("someone@example.com"),\n        username: String::from("someusername123"),\n        active: true,\n        sign_in_count: 1,\n    };\n    \n    // \u5355\u72ec\u4fee\u6539\u501f\u53e3\u66ff\u7684\u503c\n    user1.email = String::from("anotheremail@example.com");\n}\n')),(0,a.kt)("p",null,"\u4f7f\u7528\u51fd\u6570\u6765\u6784\u9020\u4e00\u4e2a\u7ed3\u6784\u4f53\u7684\u5b9e\u4f8b\uff0c\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"fn build_user(email: String, username: String) -> User {\n    User {\n        email: email, \n        username: username,\n        active: true,\n        sign_in_count: 1,\n    }\n}\n\n// \u6216\u8005\u7701\u7565\nfn build_user(email: String, username: String) -> User {\n    User {\n        email,\n        username,\n        active: true,\n        sign_in_count: 1,\n    }\n}\n")),(0,a.kt)("p",null,"\u89e3\u6784\u8bed\u6cd5\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n    let user2 = User {\n        email: String::from("another@example.com"),\n        ..user1\n    };\n}\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u6ce8\u610f\uff0c\u89e3\u6784\u8bed\u6cd5\u5176\u5b9e\u662f\u79fb\u52a8\u4e86\u6570\u636e\uff0c\u4e0d\u662f\u590d\u5236\uff0c\u8fd9\u91cc\u8d4b\u503c\u4ee5\u540e\uff0c\u5c31\u4e0d\u80fd\u518d\u4f7f\u7528"),(0,a.kt)("inlineCode",{parentName:"p"},"**user1**"),(0,a.kt)("strong",{parentName:"p"},"\u4e86")),(0,a.kt)("h2",{id:"\u5176\u4ed6\u7ed3\u6784\u4f53"},"\u5176\u4ed6\u7ed3\u6784\u4f53"),(0,a.kt)("h3",{id:"\u5143\u7ec4\u7ed3\u6784\u4f53"},"\u5143\u7ec4\u7ed3\u6784\u4f53"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"struct Color(i32, i32, i32);\nstruct Point(i32, i32, i32);\n\nfn main() {\n    let black = Color(0, 0, 0);\n    let origin = Point(0, 0, 0);\n}\n")),(0,a.kt)("p",null,"\u5143\u7ec4\u7ed3\u6784\u4f53\u5c31\u662f\u547d\u540d\u7684\u5143\u7ec4\uff0c\u53ef\u4ee5\u7528\u6765\u91cd\u590d\u6784\u9020\u76f8\u540c\u7c7b\u578b\u7684\u5143\u7ec4\u3002"),(0,a.kt)("h3",{id:"\u7c7b\u5355\u5143\u7ed3\u6784\u4f53"},"\u7c7b\u5355\u5143\u7ed3\u6784\u4f53"),(0,a.kt)("p",null,"\u5e38\u7528\u4e8e\u5728\u67d0\u4e2a\u7c7b\u578b\u4e0a\u5b9e\u73b0",(0,a.kt)("inlineCode",{parentName:"p"},"trait"),"\u4f46\u662f\u4e0d\u9700\u8981\u518d\u7c7b\u578b\u4e2d\u5b58\u50a8\u6570\u636e\u7684\u65f6\u5019\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"struct AlwaysEqual;\n\nfn main() {\n    let subject = AlwaysEqual;\n}\n")),(0,a.kt)("h2",{id:"\u7ed3\u6784\u4f53\u548c\u6240\u6709\u6743"},"\u7ed3\u6784\u4f53\u548c\u6240\u6709\u6743"),(0,a.kt)("p",null,"\u6211\u4eec\u5728\u547d\u540d\u7ed3\u6784\u4f53\u7684\u65f6\u5019\u4f7f\u7528\u4e86",(0,a.kt)("inlineCode",{parentName:"p"},"String"),"\u800c\u4e0d\u662f",(0,a.kt)("inlineCode",{parentName:"p"},"&str"),"\uff0c\u5c31\u662f\u60f3\u8ba9\u7ed3\u6784\u4f53\u62e5\u6709\u81ea\u5df1\u7684\u6240\u6709\u6743\u3002",(0,a.kt)("br",null),"\u5982\u679c\u60f3\u8981\u7ed3\u6784\u4f53\u5b58\u50a8\u5176\u4ed6\u5bf9\u8c61\u62e5\u6709\u6570\u636e\u7684\u5f15\u7528\uff0c\u5219\u9700\u8981\u8003\u8651\u751f\u547d\u5468\u671f\uff08lifetimes\uff09\uff0c\u6765\u786e\u4fdd\u7ed3\u6784\u4f53\u5f15\u7528\u7684\u6570\u636e\u6709\u6548\u6027\u548c\u7ed3\u6784\u4f53\u672c\u8eab\u6765\u4fdd\u6301\u4e00\u81f4\u3002",(0,a.kt)("br",null),"\u76f4\u63a5\u4f7f\u7528\u5f15\u7528\u7684\u7ed3\u6784\u4f53\u4ee3\u7801\u662f\u65e0\u6548\u7684\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'struct User {\n    active: bool,\n    username: &str,\n    email: &str,\n    sign_in_count: u64,\n}\n\nfn main() {\n    let user1 = User {\n        email: "someone@example.com",\n        username: "someusername123",\n        active: true,\n        sign_in_count: 1,\n    };\n}\n')),(0,a.kt)("h2",{id:"\u65b9\u6cd5\u7ed3\u6784\u4f53"},"\u65b9\u6cd5\u7ed3\u6784\u4f53"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"struct Rectangle {\n    width: u32,\n    height: u32,\n}\n\nimpl Rectangle {\n    fn area(&self) -> u32 {\n        self.width * self.height\n    }\n}\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"impl"),"\u662f",(0,a.kt)("inlineCode",{parentName:"li"},"implementation"),"\u7684\u7f29\u5199\uff0c\u5757\u4e2d\u7684\u6240\u6709\u5185\u5bb9\u90fd\u5c06\u4e0e",(0,a.kt)("inlineCode",{parentName:"li"},"Rectangle"),"\u7c7b\u578b\u5173\u8054\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u65b9\u6cd5\u4e2d\u53ef\u4ee5\u901a\u8fc7",(0,a.kt)("inlineCode",{parentName:"li"},"&self"),"\u6765\u8c03\u7528\u81ea\u8eab\u3002\u6ce8\u610f\u8fd9\u91cc\u4ecd\u7136\u662f\u4e00\u4e2a\u5f15\u7528\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u65b9\u6cd5\u548c\u5b57\u6bb5\u53ef\u4ee5\u662f\u540c\u4e00\u4e2a\u540d\u79f0\uff0c \u4f8b\u5982\uff1a")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'impl Rectangle {\n    fn width(&self) -> bool {\n        self.width > 0\n    }\n    \n    fn can_hold(&self, other: &Rectangle) -> bool {\n        self.width > other.width && self.height > other.height\n    }\n}\n\nfn main() {\n    let rect1 = Rectangle {\n        width: 30,\n        height: 50,\n    };\n\n    if rect1.width() {\n        printl\xcfn!("The rectangle has a nonzero width; it is {}", rect1.width);\n    }\n   \n    let rect2 = Rectangle {\n        width: 10,\n        height: 40,\n    };\n    let rect3 = Rectangle {\n        width: 60,\n        height: 45,\n    };\n\n    println!("Can rect1 hold rect2? {}", rect1.can_hold(&rect2));\n    println!("Can rect1 hold rect3? {}", rect1.can_hold(&rect3));\n}\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u81ea\u8eab\u5bf9\u8c61\uff0c\u5269\u4e0b\u7684\u53c2\u6570\u5219\u4f1a\u88ab\u4f20\u8fdb\u65b9\u6cd5\u3002")),(0,a.kt)("h3",{id:"\u5173\u8054\u51fd\u6570"},"\u5173\u8054\u51fd\u6570"),(0,a.kt)("p",null,"\u5728",(0,a.kt)("inlineCode",{parentName:"p"},"impl"),"\u4e2d\u5b9a\u4e49\u7684\u51fd\u6570 \u53eb\u505a \u5173\u8054\u51fd\u6570 \u3002 \u56e0\u4e3a\u4ed6\u4eec\u548c",(0,a.kt)("inlineCode",{parentName:"p"},"impl"),"\u540e\u9762\u547d\u540d\u7684\u7c7b\u578b\u662f\u76f8\u5173\u7684\u3002",(0,a.kt)("br",null),"\u5982\u679c\u53c2\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e0d\u662f",(0,a.kt)("inlineCode",{parentName:"p"},"&self"),"\uff0c\u90a3\u4e48\u4ed6\u4eec\u5c31\u4e0d\u662f",(0,a.kt)("strong",{parentName:"p"},"\u65b9\u6cd5\u3002")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"impl Rectangle {\n    fn square(size: u32) -> Rectangle {\n        Rectangle {\n            width: size,\n            height: size,\n        }\n    }\n}\n\nRectangle\n")),(0,a.kt)("p",null,"\u53ef\u4ee5\u4f7f\u7528",(0,a.kt)("inlineCode",{parentName:"p"},"::"),"\u8bed\u6cd5\u6765\u8c03\u7528\u8fd9\u4e2a\u5173\u8054\u51fd\u6570\u3002",(0,a.kt)("br",null),(0,a.kt)("inlineCode",{parentName:"p"},"impl"),"\u662f\u53ef\u4ee5\u5206\u5f00\u5b9a\u4e49\u7684\uff0c\u6bd4\u5982\u8fd9\u6837\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"impl Rectangle {\n    fn area(&self) -> u32 {\n        self.width * self.height\n    }\n}\n\nimpl Rectangle {\n    fn can_hold(&self, other: &Rectangle) -> bool {\n        self.width > other.width && self.height > other.height\n    }\n}\n")),(0,a.kt)("p",null,"\u9664\u4e86\u4f7f\u7528\u7ed3\u6784\u4f53\u6765\u521b\u5efa\u81ea\u5b9a\u4e49\u7c7b\u578b\u8fd8\u53ef\u4ee5\u4f7f\u7528\u679a\u4e3e\u548c\u6a21\u5f0f\u3002"),(0,a.kt)("h1",{id:"\u679a\u4e3e"},"\u679a\u4e3e"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"// \u5b9a\u4e49\u4e24\u4e2a\u4e0d\u540c\u7c7b\u578b\u7684IP\u5730\u5740\nenum IpAddrKind {\n    V4,\n    V6,\n}\n\nfn main() {\n    // \u7ed9\u679a\u4e3e\u503c\u8d4b\u503c\n    let four = IpAddrKind::V4;\n    let six = IpAddrKind::V6;\n\n    route(IpAddrKind::V4);\n    route(IpAddrKind::V6);\n}\n\nfn route(ip_kind: IpAddrKind) {}\n\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5f53\u7136\u53ef\u4ee5\u628a\u6570\u636e\u76f4\u63a5\u5b9a\u4e49\u5728\u6211\u4eec\u7684\u7ed3\u6784\u4f53\u4e0a\uff1a")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n    enum IpAddr {\n        V4(u8, u8, u8, u8),\n        V6(String),\n    }\n\n    let home = IpAddr::V4(127, 0, 0, 1);\n\n    let loopback = IpAddr::V6(String::from("::1"));\n}\n')),(0,a.kt)("p",null,"\u540c\u4e00\u4e2a\u679a\u4e3e\u4e2d\u53ef\u4ee5\u5904\u7406\u5404\u79cd\u7c7b\u578b\uff0c\u6bd4\u5982\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"enum Message {\n    Quit,\n    Move { x: i32, y: i32 },\n    Write(String),\n    ChangeColor(i32, i32, i32),\n}\n")),(0,a.kt)("p",null,"\u6211\u4eec\u4e5f\u53ef\u4ee5\u7ed9\u679a\u4e3e\u5b9a\u4e49\u65b9\u6cd5\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n    enum Message {\n        Quit,\n        Move { x: i32, y: i32 },\n        Write(String),\n        ChangeColor(i32, i32, i32),\n    }\n\n    impl Message {\n        fn call(&self) {\n            // \u5728\u8fd9\u91cc\u5b9a\u4e49\u65b9\u6cd5\u4f53\n        }\n    }\n\n    let m = Message::Write(String::from("hello"));\n    m.call();\n}\n')),(0,a.kt)("h2",{id:"option"},"Option"),(0,a.kt)("p",null,"\u5728\u6709\u7a7a\u503c\u7684\u8bed\u8a00\u4e2d\uff0c \u53d8\u91cf\u6709\u4e24\u79cd\u72b6\u6001\uff1a\u7a7a\u503c\u548c\u975e\u7a7a\u503c\u3002",(0,a.kt)("br",null),"Rust\u6ca1\u6709\u7a7a\u503c\uff0c\u4f46\u662f\u53ef\u4ee5\u8868\u793a\u4e00\u4e2a\u7f16\u7801\u5b58\u5728\u6216\u8005\u4e0d\u5b58\u5728\u7684\u6982\u5ff5\u7684\u679a\u4e3e\u3002\u8fd9\u4e2a\u679a\u4e3e\u662f",(0,a.kt)("inlineCode",{parentName:"p"},"Option<T>"),"\u3002",(0,a.kt)("br",null),"\u5176\u4e2d",(0,a.kt)("inlineCode",{parentName:"p"},"T"),"\u662f"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"enum Option<T> {\n    None,\n    Some(T),\n}\n")),(0,a.kt)("p",null,"\u8fd9\u4e2a\u679a\u4e3e\u975e\u5e38\u6709\u7528\u3002\u6240\u4ee5\u5b83\u88ab\u5305\u542b\u5728",(0,a.kt)("inlineCode",{parentName:"p"},"prelude"),"\u4e2d\uff0c\u4e0d\u9700\u8981\u663e\u793a\u5f15\u5165\uff0c\u4ed6\u7684\u6210\u5458\u4e5f\u53ef\u4ee5\uff0c\u76f4\u63a5\u50cf\u4e0b\u9762\u8fd9\u6837\u8c03\u7528\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n    let some_number = Some(5);\n    let some_string = Some("a string");\n\n    let absent_number: Option<i32> = None;\n}\n')),(0,a.kt)("p",null,"\u5f53\u6709\u4e00\u4e2aSome\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u77e5\u9053\u5b58\u5728\u4e00\u4e2a\u503c\uff0c\u800c\u8fd9\u4e2a\u503c\u4fdd\u5b58\u5728Some\u4e2d\u3002\u5f53\u6709\u4e2a",(0,a.kt)("inlineCode",{parentName:"p"},"None"),"\u503c\u65f6\uff0c\u5728\u67d0\u79cd\u610f\u4e49\u4e0a\uff0c\u5b83\u548c\u7a7a\u503c\u6709\u76f8\u540c\u7684\u610f\u4e49\uff1a\u5e76\u6ca1\u6709\u4e00\u4e2a\u6709\u6548\u7684\u503c\u3002",(0,a.kt)("br",null),"\u6bd4\u7a7a\u503c\u66f4\u597d\u7684\u610f\u4e49\u662f\uff1a",(0,a.kt)("inlineCode",{parentName:"p"},"Option<T>"),"\u662f",(0,a.kt)("strong",{parentName:"p"},"\u9650\u5b9a\u4e86\u7c7b\u578b"),"\u7684\u3002"),(0,a.kt)("h2",{id:"\u679a\u4e3e\u548cmatch"},"\u679a\u4e3e\u548cmatch"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'enum Coin {\n    Penny,\n    Nickel,\n    Dime,\n    Quarter,\n}\n\nfn value_in_cents(coin: Coin) -> u8 {\n    match coin {\n        Coin::Penny => {\n            printIn!("Lucky penny!")\n        },\n        Coin::Nickel => 5,\n        Coin::Dime => 10,\n        Coin::Quarter => 25,\n    }\n}\n')),(0,a.kt)("h3",{id:"match-\u548c-option"},"match \u548c option"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"fn main() {\n    fn plus_one(x: Option<i32>) -> Option<i32> {\n        match x {\n            // \u4e0d\u5b58\u5728\u503c\u7684\u65f6\u5019\uff0c\u8fd4\u56deNone\n            None => None,\n            // \u5f53\u5b58\u5728\u53ea\u7684\u65f6\u5019\uff0c\u7ed9\u52a01\n            Some(i) => Some(i + 1),\n        }\n    }\n\n    let five = Some(5);\n    let six = plus_one(five);\n    let none = plus_one(None);\n}\n")),(0,a.kt)("h3",{id:"\u901a\u914d\u7b26\u548c-_\u5360\u4f4d\u7b26"},"\u901a\u914d\u7b26\u548c ",(0,a.kt)("inlineCode",{parentName:"h3"},"_"),"\u5360\u4f4d\u7b26"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"fn main() {\n    let dice_roll = 9;\n    match dice_roll {\n        3 => add_fancy_hat(),\n        7 => remove_fancy_hat(),\n        // \u7edf\u914d\u6a21\u5f0f\n        other => move_player(other),\n    }\n\n    fn add_fancy_hat() {}\n    fn remove_fancy_hat() {}\n    fn move_player(num_spaces: u8) {}\n}\n")),(0,a.kt)("p",null,"\u4e0d\u7528\u8fd9\u79cd\u7edf\u914d\u6a21\u5f0f\u7684\u8bdd\uff0c\u53ef\u4ee5\u4f7f\u7528",(0,a.kt)("inlineCode",{parentName:"p"},"_"),",  \u8fd9\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u6a21\u5f0f\uff0c\u53ef\u4ee5\u5339\u914d\u4efb\u610f\u503c\u800c\u4e0d\u7ed1\u5b9a\u5230\u8be5\u503c\u3002\u8fd9\u544a\u8bc9Rust\u6211\u4eec\u4e0d\u4f1a\u4f7f\u7528\u8fd9\u4e2a\u503c\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"fn main() {\n    let dice_roll = 9;\n    match dice_roll {\n        3 => add_fancy_hat(),\n        7 => remove_fancy_hat(),\n        _ => reroll(),\n    }\n\n    fn add_fancy_hat() {}\n    fn remove_fancy_hat() {}\n    fn reroll() {}\n}\n")),(0,a.kt)("h3",{id:"if-let-\u7b80\u6d01\u63a7\u5236\u6d41"},"if let \u7b80\u6d01\u63a7\u5236\u6d41"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"if let"),"\u6a21\u5f0f\u53ef\u4ee5\u6765\u5904\u7406\u53ea\u5339\u914d\u4e00\u4e2a\u6a21\u5f0f\u7684\u503c\u800c\u5ffd\u7565\u5176\u4ed6\u6a21\u5f0f\u7684\u60c5\u51b5\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n    let config_max = Some(3u8);\n    match config_max {\n        Some(max) => println!("The maximum is configured to be {}", max),\n        _ => (),\n    }\n    \n    \n    // => \u53ef\u4ee5\u7528\u66f4\u7b80\u6d01\u7684\u65b9\u5f0f\u4e66\u5199\n    if let Some(max) = config_max {\n        println!("The maximum is configured to be {}", max);\n    }\n}\n')),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"if let"),"\u8bed\u6cd5\u83b7\u53d6\u901a\u8fc7\u7b49\u53f7\u5206\u9694\u7684\u4e00\u4e2a\u6a21\u5f0f\u548c\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u5b83\u7684\u5de5\u4f5c\u65b9\u5f0f\u548c",(0,a.kt)("inlineCode",{parentName:"p"},"match"),"\u662f\u76f8\u540c\u7684\uff0c\u8fd9\u91cc\u7684\u8868\u8fbe\u5f0f\u5bf9\u5e94\u7684\u5c31\u662f",(0,a.kt)("inlineCode",{parentName:"p"},"match"),"\uff0c\u800c\u6a21\u5f0f\u5bf9\u5e94\u7b2c\u4e00\u4e2a\u5206\u652f\u3002",(0,a.kt)("br",null),"\u53e6\u4e00\u4e2a\u65b9\u9762\uff0c\u8fd9\u79cd\u6a21\u5f0f\u4f1a\u5931\u53bb\u7a77\u5c3d\u6027\u68c0\u67e5\u3002"))}s.isMDXComponent=!0}}]);