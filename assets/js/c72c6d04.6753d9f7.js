"use strict";(self.webpackChunk_jeiiz_wiki_site=self.webpackChunk_jeiiz_wiki_site||[]).push([[3101],{158:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>k});var r=t(6393);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,l=function(e,n){if(null==e)return{};var t,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var o=r.createContext({}),s=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(o.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,l=e.mdxType,a=e.originalType,o=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),c=s(t),k=l,d=c["".concat(o,".").concat(k)]||c[k]||m[k]||a;return t?r.createElement(d,i(i({ref:n},u),{},{components:t})):r.createElement(d,i({ref:n},u))}));function k(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var a=t.length,i=new Array(a);i[0]=c;var p={};for(var o in n)hasOwnProperty.call(n,o)&&(p[o]=n[o]);p.originalType=e,p.mdxType="string"==typeof e?e:l,i[1]=p;for(var s=2;s<a;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},7164:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>p,toc:()=>s});var r=t(9421),l=(t(6393),t(158));const a={},i="Hello Rust [5] - \u96c6\u5408 & Panic!",p={unversionedId:"\u5176\u4ed6/Rust/05\u96c6\u5408-panic",id:"\u5176\u4ed6/Rust/05\u96c6\u5408-panic",title:"Hello Rust [5] - \u96c6\u5408 & Panic!",description:"Vector",source:"@site/docs/\u5176\u4ed6/Rust/05\u96c6\u5408-panic.md",sourceDirName:"\u5176\u4ed6/Rust",slug:"/\u5176\u4ed6/Rust/05\u96c6\u5408-panic",permalink:"/docs/\u5176\u4ed6/Rust/05\u96c6\u5408-panic",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Hello Rust [4] - \u6a21\u5757",permalink:"/docs/\u5176\u4ed6/Rust/04\u6a21\u5757"},next:{title:"Hello Rust [6] - \u6cdb\u578b & Trait & \u751f\u547d\u5468\u671f",permalink:"/docs/\u5176\u4ed6/Rust/06\u6cdb\u578b-Trait-\u751f\u547d\u5468\u671f"}},o={},s=[{value:"Vector",id:"vector",level:2},{value:"\u5b57\u7b26\u4e32",id:"\u5b57\u7b26\u4e32",level:2},{value:"Hash Map",id:"hash-map",level:2},{value:"panic!: \u4e0d\u53ef\u6062\u590d\u9519\u8bef",id:"panic-\u4e0d\u53ef\u6062\u590d\u9519\u8bef",level:2},{value:"Result\uff1a\u53ef\u6062\u590d\u7684\u9519\u8bef",id:"result\u53ef\u6062\u590d\u7684\u9519\u8bef",level:2}],u={toc:s};function m(e){let{components:n,...t}=e;return(0,l.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"hello-rust-5---\u96c6\u5408--panic"},"Hello Rust ","[5]"," - \u96c6\u5408 & Panic!"),(0,l.kt)("h1",{id:"\u96c6\u5408"},"\u96c6\u5408"),(0,l.kt)("h2",{id:"vector"},"Vector"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"vector \u5141\u8bb8 ",(0,l.kt)("strong",{parentName:"li"},"\u8fde\u7eed\u7684\u5b58\u50a8")," ",(0,l.kt)("strong",{parentName:"li"},"\u6570\u91cf\u53ef\u53d8")," \u7684\u503c")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"}," let v: Vec<i32> = Vec::new();\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Vector\u662f\u7528\u6cdb\u578b\u5b9e\u73b0\u7684\u3002")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u4e00\u822c\u6211\u4eec\u53ef\u80fd\u4f1a\u7528\u521d\u59cb\u503c\u6765\u5b9e\u73b0\uff0crust\u4f1a\u81ea\u52a8\u63a8\u65ad\u5176\u7c7b\u578b"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"let v = vec![1, 2, 3];\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4e22\u5f03vetctor\uff0c\u5185\u90e8\u5143\u7d20\u4e5f\u4f1a\u88ab\u4e22\u5f03")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"{\n   let v = vec![1, 2, 3, 4];\n   // \u5904\u7406\u53d8\u91cf v\n} // <- \u8fd9\u91cc v \u79bb\u5f00\u4f5c\u7528\u57df\u5e76\u88ab\u4e22\u5f03\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u66f4\u65b0vector")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"let mut v = Vec::new();\n// \u8ffd\u52a0\u5143\u7d20\uff0c\u81ea\u52a8\u63a8\u65ad\u7c7b\u578b\uff0c\u4e0d\u9700\u8981\u6ce8\u89e3\nv.push(5);\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u8bfb\u53d6vector\uff1a \u7d22\u5f15\u8bed\u6cd5\u6216\u8005get\u65b9\u6cd5")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'let v = vec![1, 2, 3, 4, 5];\n\nlet third: &i32 = &v[2];\n\nmatch v.get(2) {\n    Some(third) => println!("The third element is {}", third),\n    None => println!("There is no third element."),\n}\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u533a\u522b\u5728\u4e8e\uff1a\u7d22\u5f15\u8bed\u6cd5\u6709\u8d8a\u754c\u7684\u98ce\u9669\uff0c\u800cget\u5728\u8d8a\u754c\u65f6\u4f1a\u8fd4\u56de\u4e00\u4e2aNone")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u904d\u5386vector\uff1a"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"fn main() {\n    let v = vec![100, 32, 57];\n    for i in &v {\n        *i += 50;\n    }\n}\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u7528\u679a\u4e3e\u6784\u9020vector:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n    enum SpreadsheetCell {\n        Int(i32),\n        Float(f64),\n        Text(String),\n    }\n\n    let row = vec![\n        SpreadsheetCell::Int(3),\n        SpreadsheetCell::Text(String::from("blue")),\n        SpreadsheetCell::Float(10.12),\n    ];\n}\n')),(0,l.kt)("h2",{id:"\u5b57\u7b26\u4e32"},"\u5b57\u7b26\u4e32"),(0,l.kt)("p",null,"\u5b57\u7b26\u4e32\u5c31\u662f\u5b57\u8282\u7684\u96c6\u5408\uff0c\u5916\u52a0\u4e00\u4e9b\u65b9\u6cd5\u3002"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Rust\u7684",(0,l.kt)("strong",{parentName:"p"},"\u6838\u5fc3\u8bed\u8a00"),"\u4e2d\u53ea\u6709\u4e00\u79cd\u5b57\u7b26\u4e32\u7c7b\u578b\uff1a",(0,l.kt)("inlineCode",{parentName:"p"},"str"),"\uff0c\u5b57\u7b26\u4e32slice\uff0c\u901a\u5e38\u4ee5\u5f15\u7528\u7684\u65b9\u5f0f\u51fa\u73b0",(0,l.kt)("inlineCode",{parentName:"p"},"&str"),"\u3002")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"String"),"\u7c7b\u578b\u662f\u7531",(0,l.kt)("strong",{parentName:"p"},"\u6807\u51c6\u5e93"),"\u63d0\u4f9b\u7684\uff0c\u662f\u53ef\u589e\u957f\u7684\uff0c\u53ef\u53d8\u7684\uff0c\u6709\u6240\u6709\u6743\u7684\uff0cUTF-8\u7f16\u7801\u7684\u5b57\u7b26\u4e32\u7c7b\u578b\u3002")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u521d\u59cb\u5316\u4e00\u4e2a\u5b57\u7b26\u4e32"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'// \u65b0\u5efa\u5b57\u7b26\u4e32\nlet mut s = String::new();\n\nlet data = "initial contents";\n\nlet s = data.to_string();\n\n// \u8be5\u65b9\u6cd5\u4e5f\u53ef\u76f4\u63a5\u7528\u4e8e\u5b57\u7b26\u4e32\u5b57\u9762\u503c\uff1a\nlet s = "initial contents".to_string();\n\n// \u76f4\u63a5\u8d4b\u503c\nlet s = String::from("initial contents");\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u66f4\u65b0\uff0c\u62fc\u63a5\u5b57\u7b26\u4e32")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'// \u4f8b\u5b501\nlet mut s = String::from("foo");\nlet s2 = "bar"\n// \u8ffd\u52a0\u5b57\u7b26\u4e32\ns.push_str(s2); // foobar\n// \u8fd9\u79cd\u65b9\u5f0f\u4e0d\u4f1a\u83b7\u53d6\u53c2\u6570\u7684\u6240\u6709\u6743\nprintln!("s2 is {}", s2);\n\n// \u4f8b\u5b502\nlet mut s = String::from("lo");\n// \u7528\u4e8e\u8ffd\u52a0\u5355\u72ec\u7684\u5b57\u7b26\ns.push(\'l\');\n\n\n// \u4f8b\u5b503\nlet s1 = String::from("Hello, ");\nlet s2 = String::from("world!");\nlet s3 = s1 + &s2; // \u6ce8\u610f s1 \u88ab\u79fb\u52a8\u4e86\uff0c\u4e0d\u80fd\u7ee7\u7eed\u4f7f\u7528\n\n// \u4f8b\u5b504\nlet s1 = String::from("tic");\nlet s2 = String::from("tac");\nlet s3 = String::from("toe");\n// \u4f7f\u7528\u7d22\u5f15\u5e76\u4e14\u4e0d\u4f1a\u83b7\u53d6\u4efb\u4f55\u53c2\u6570\u7684\u6240\u6709\u6743\nlet s = format!("{}-{}-{}", s1, s2, s3);\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4e0d\u652f\u6301\u7d22\u5f15\u5b57\u7b26\u4e32\uff1aRust\u662f\u4e0d\u652f\u6301\u7d22\u5f15\u8bbf\u95ee\u5b57\u7b26\u4e32\u7684\uff0c\u56e0\u4e3a\u5728Unicode\u7f16\u7801\u4e0b\uff0c\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u7d22\u5f15\u5e76\u4e0d\u603b\u662f\u5bf9\u5e94\u7740\u4e00\u4e2a\u6709\u6548\u7684\u5b57\u6bcd\uff08\u67d0\u4e9b\u7b26\u53f7\u5360\u4e24\u4e2a\u5b57\u8282\uff09\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u4e00\u822c\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528",(0,l.kt)("inlineCode",{parentName:"li"},"slice"),"\u6765\u83b7\u53d6\u5b57\u7b26\u4e32\u7684\u4e00\u90e8\u5206\u3002")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'let hello = "\u0417\u0434\u0440\u0430\u0432\u0441\u0442\u0432\u0443\u0439\u0442\u0435";\n\nlet s = &hello[0..4]; // \u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\u5b57\u7b26\u90fd\u662f\u4e24\u4e2a\u5b57\u8282\u957f\u5ea6\u7684\uff0c\u6240\u4ee5 s = "\u0417\u0434"\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u904d\u5386\u5b57\u7b26\u4e32")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'// \u904d\u5386\u5b57\u7b26\u4f4d\uff0c\u8fd9\u91cc\u4f1a\u5faa\u73af6\u6b21\nfor c in "\u0928\u092e\u0938\u094d\u0924\u0947".chars() {\n    println!("{}", c); \n}\n// \u0928 \u092e \u0938  \u094d \u0924  \u0947\n\n// \u8fd4\u56de\u539f\u59cb\u5b57\u8282\nfor b in "\u0928\u092e\u0938\u094d\u0924\u0947".bytes() {\n    println!("{}", b);\n}\n// 224 164 --snip-- 165 135\n\n')),(0,l.kt)("h2",{id:"hash-map"},"Hash Map"),(0,l.kt)("p",null,"\u901a\u8fc7\u4e00\u4e2ahash\u51fd\u6570\u6765\u6620\u5c04\u4e00\u4e2a",(0,l.kt)("inlineCode",{parentName:"p"},"<k, v>"),"\u5bf9\u8c61"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u65b0\u5efahashmap\uff1a")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'use std::collections::HashMap;\n\n// \u65b9\u5f0f1\uff1a\u65b0\u5efaHashmap\u5bf9\u8c61\nlet mut scores = HashMap::new();\n    \nscores.insert(String::from("Blue"), 10);\nscores.insert(String::from("Yellow"), 50);\n\n// \u65b9\u5f0f2\uff1a \u4ece vec \u8fed\u4ee3\u5668\u4e0a\u65b0\u5efa\nlet teams = vec![String::from("Blue"), String::from("Yellow")];\nlet initial_scores = vec![10, 50];\n\nlet mut scores: HashMap<_, _> =\n    teams.into_iter().zip(initial_scores.into_iter()).collect();\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u6240\u6709\u6743\uff1a"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5bf9\u4e8e\u5b9e\u73b0\u4e86",(0,l.kt)("inlineCode",{parentName:"li"},"Copy trait"),"\u7684\u7c7b\u578b\uff0c\u4f1a\u88ab\u62f7\u8d1d\u8fdb\u5165hashmap"),(0,l.kt)("li",{parentName:"ul"},"\u5bf9\u4e8eString\u8fd9\u79cd\u6709\u6240\u6709\u6743\u7684\u503c\uff0c\u4f1a\u88ab\u79fb\u52a8\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u8bbf\u95ee & \u904d\u5386\uff1a"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'// \u8bbf\u95eehashmap\u4e2d\u7684\u503c\nlet team_name = String::from("Blue");\nlet score = scores.get(&team_name);\n\n// \u904d\u5386\nfor (key, value) in &scores {\n    println!("{}: {}", key, value);\n}\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u66f4\u65b0\uff1a")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'scores.insert(String::from("Blue"), 10);\n// \u8986\u76d6\u66f4\u65b0\nscores.insert(String::from("Blue"), 25);\n\n// \u53ea\u5728\u952e\u6ca1\u6709\u5bf9\u5e94\u503c\u65f6\u63d2\u5165\nscores.entry(String::from("Blue")).or_insert(50);\n\n// \u6839\u636e\u65e7\u503c\u66f4\u65b0\nlet count = map.entry(String::from("Blue")).or_insert(0);\n// \u89e3\u5f15\u7528\n*count += 1;\n')),(0,l.kt)("h1",{id:"\u9519\u8bef\u5904\u7406"},"\u9519\u8bef\u5904\u7406"),(0,l.kt)("h2",{id:"panic-\u4e0d\u53ef\u6062\u590d\u9519\u8bef"},"panic!: \u4e0d\u53ef\u6062\u590d\u9519\u8bef"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"panic!"),"\u5b8f\u6709\u4e24\u79cd\u884c\u4e3a\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5c55\u5f00\uff08unwinding\uff09\uff1aRust\u4f1a\u56de\u6eaf\u6808\u5e76\u4e14\u6e05\u7406\u5b83\u9047\u5230\u7684\u6bcf\u4e00\u4e2a\u51fd\u6570\u7684\u6570\u636e\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u7ec8\u6b62\uff08abort\uff09\uff1a\u76f4\u63a5\u9000\u51fa\u7a0b\u5e8f\u3002")),(0,l.kt)("p",null,"\u53ef\u4ee5\u5728\u6211\u4eec\u7684",(0,l.kt)("inlineCode",{parentName:"p"},"Cargo.toml"),"\u4e2d\u8fdb\u884c\u914d\u7f6e\u76f8\u5e94\u7684\u5173\u952e\u5b57\u5207\u6362\u6a21\u5f0f\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-toml"},"[profile.release]\npanic = 'abort'\n")),(0,l.kt)("p",null,"\u5728\u7a0b\u5e8f\u4e2d\u89e6\u53d1\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n    // \u624b\u52a8\u8c03\u7528panic\n    panic!("crash and burn");\n    \n    // \u7a0b\u5e8f\u5f02\u5e38\u629b\u51fapanic\n    let v = vec![1, 2, 3];\n    v[99];\n}\n')),(0,l.kt)("h2",{id:"result\u53ef\u6062\u590d\u7684\u9519\u8bef"},"Result\uff1a\u53ef\u6062\u590d\u7684\u9519\u8bef"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"enum Result<T, E> {\n    Ok(T),\n    Err(E),\n}\n")),(0,l.kt)("p",null,"\u53ef\u4ee5\u4f7f\u7528match\u8868\u8fbe\u5f0f\u5904\u7406\u53ef\u80fd\u4f1a\u8fd4\u56de\u7684",(0,l.kt)("inlineCode",{parentName:"p"},"Result"),"\u6210\u5458\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'use std::fs::File;\n\nfn main() {\n    let f = File::open("hello.txt");\n\n    let f = match f {\n        Ok(file) => file,\n        Err(error) => panic!("Problem opening the file: {:?}", error),\n        \n        // \u53ef\u4ee5\u8fdb\u4e00\u6b65\u6b63\u5bf9\u4e0d\u540c\u7684\u9519\u8bef\u7c7b\u578b\u8fdb\u884c\u5904\u7406\uff1a\n        Err(error) => match error.kind() {\n            ErrorKind::NotFound => match File::create("hello.txt") {\n                Ok(fc) => fc,\n                Err(e) => panic!("Problem creating the file: {:?}", e),\n            },\n            other_error => {\n                panic!("Problem opening the file: {:?}", other_error)\n            }\n        },\n    };\n}\n')),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Result<T, E>"),"\u5b9a\u4e49\u4e86\u5f88\u591a\u8f85\u52a9\u65b9\u6cd5\u6765\u5904\u7406\u5404\u79cd\u60c5\u51b5\u3002\u5176\u4e2d\u4e4b\u4e00\u53eb\u505a",(0,l.kt)("inlineCode",{parentName:"p"},"unwrap"),"\uff0c\u5176\u5b9e\u73b0\u7c7b\u4f3c\u4e8e",(0,l.kt)("inlineCode",{parentName:"p"},"match"),"\u8bed\u6cd5\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'use std::fs::File;\n\nfn main() {\n    let f = File::open("hello.txt").unwrap();\n}\n')),(0,l.kt)("p",null,"\u53e6\u4e00\u4e2a\u7c7b\u4f3c\u7684",(0,l.kt)("inlineCode",{parentName:"p"},"expect"),"\u5141\u8bb8\u6211\u4eec\u9009\u62e9\u9519\u8bef\u4fe1\u606f\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'use std::fs::File;\n\nfn main() {\n    let f = File::open("hello.txt").expect("Failed to open hello.txt");\n}\n')),(0,l.kt)("p",null,"\u8fd9\u4e24\u4e2a\u4f7f\u7528\u8d77\u7684\u65b9\u5f0f\u662f\u4e00\u6837\u7684\uff1a \u8fd4\u56de\u6587\u4ef6\u53e5\u67c4\u6216\u8c03\u7528 panic! \u5b8f\u3002"),(0,l.kt)("p",null,"\u4f20\u64ad\u9519\u8bef\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'use std::fs::File;\nuse std::io::{self, Read};\n\nfn read_username_from_file() -> Result<String, io::Error> {\n    let f = File::open("hello.txt");\n\n    let mut f = match f {\n        Ok(file) => file,\n        Err(e) => return Err(e),\n    };\n\n    let mut s = String::new();\n\n    match f.read_to_string(&mut s) {\n        Ok(_) => Ok(s),\n        Err(e) => Err(e),\n    }\n}\n\n// \u53e6\u4e00\u79cd\u7b80\u5199\u65b9\u5f0f\uff1a\nfn read_username_from_file() -> Result<String, io::Error> {\n    let mut f = File::open("hello.txt")?;\n    let mut s = String::new();\n    f.read_to_string(&mut s)?;\n    Ok(s)\n}\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"?"),"\u8fd8\u80fd\u76f4\u63a5\u652f\u6301\u94fe\u5f0f\u65b9\u6cd5\u8c03\u7528\u6765\u8fdb\u4e00\u6b65\u7f29\u77ed\u4ee3\u7801\uff1a")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'fn read_username_from_file() -> Result<String, io::Error> {\n    let mut s = String::new();\n\n    File::open("hello.txt")?.read_to_string(&mut s)?;\n\n    Ok(s)\n}\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5b9e\u9645\u4e0a\uff0c",(0,l.kt)("inlineCode",{parentName:"li"},"\uff1f"),"\u88ab\u5b9a\u4e49\u4e3a\u4ece\u51fd\u6570\u4e2d\u63d0\u65e9\u8fd4\u56de\u4e00\u4e2a\u503c\u3002\u7c7b\u4f3c\u4e8e",(0,l.kt)("inlineCode",{parentName:"li"},"match"),"\u7684\u5de5\u4f5c\u65b9\u5f0f\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u9700\u8981\u6ce8\u610f\uff1a",(0,l.kt)("inlineCode",{parentName:"li"},"\uff1f"),"\u53ea\u80fd\u5728\u8fd4\u56de",(0,l.kt)("inlineCode",{parentName:"li"},"Result"),"\u6216\u8005\u5b9e\u73b0\u4e86",(0,l.kt)("inlineCode",{parentName:"li"},"FromResidual"),"\u7684\u7c7b\u578b\u7684\u51fd\u6570\u4e2d\u4f7f\u7528",(0,l.kt)("inlineCode",{parentName:"li"},"\uff1f"),"\u8fd0\u7b97\u7b26\u3002")))}m.isMDXComponent=!0}}]);